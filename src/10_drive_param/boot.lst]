     1                                  %include        "../include/macro.s"
     2                              <1> %macro  cdecl 1-*.nolist
     3                              <1> 
     4                              <1>     %rep %0 - 1
     5                              <1>         push    %{-1:-1}
     6                              <1>         %rotate -1
     7                              <1>     %endrep
     8                              <1>     %rotate -1
     9                              <1> 
    10                              <1>         call    %1
    11                              <1>     
    12                              <1>     %if 1 < %0
    13                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    14                              <1>     %endif
    15                              <1> 
    16                              <1> %endmacro
    17                              <1> 
    18                              <1> struc drive
    19 00000000 ????                <1>         .no     resw    1 ; ドライブ番号
    20 00000002 ????                <1>         .cyln   resw    1 ; シリンダ
    21 00000004 ????                <1>         .head   resw    1 ; ヘッド
    22 00000006 ????                <1>         .sect   resw    1 ; セクタ
    23                              <1> endstruc
     2                                  %include        "../include/define.s"
     3                              <1> BOOT_LOAD   equ     0x7C00 ; ブートプログラムのロード位置
     4                              <1> 
     5                              <1> BOOT_SIZE   equ     (1024 * 8) ; ブートプログラムのサイズ(8KB)
     6                              <1> SECT_SIZE   equ     (512) ; セクタサイズ
     7                              <1> BOOT_SECT   equ     (BOOT_SIZE / SECT_SIZE) ; ブートプログラムのセクタ数
     3                                  
     4                                          ORG     BOOT_LOAD
     5                                  
     6                                  entry:
     7 00000000 EB58                            jmp     ipl
     8 00000002 90<rep 58h>                     times   90 - ($ - $$) db 0x90 ; BPB(90 byte)をNOP命令で埋める
     9                                  
    10                                  ipl:
    11 0000005A FA                              cli ; 割り込み禁止
    12                                  
    13 0000005B B80000                          mov     ax, 0x0000
    14 0000005E 8ED8                            mov     ds, ax
    15 00000060 8EC0                            mov     es, ax
    16 00000062 8ED0                            mov     ss, ax
    17 00000064 BC007C                          mov     sp, BOOT_LOAD
    18                                  
    19 00000067 FB                              sti ; 割り込み許可
    20                                  
    21 00000068 8816[BC00]                      mov     [BOOT + drive.no], dl ; ブートドライブを保存
    22                                  
    23                                          ; 文字列の表示
    24 0000006C 68[9900]E8520083C4-             cdecl   puts, .s0 
    24 00000074 02                 
    25                                  
    26                                          ; 残りのセクタを読み込む
    27 00000075 BB0F00                          mov     bx, BOOT_SECT - 1 ; 残りのブートセクタ数
    28 00000078 B9007E                          mov     cx, BOOT_LOAD + SECT_SIZE ; 次のロードアドレス
    29                                  
    30 0000007B 515368[BC00]E8A000-             cdecl   read_chs, BOOT, bx, cx
    30 00000083 83C406             
    31                                          
    32 00000086 39D8                            cmp     ax, bx
    33                                  .10Q:  
    34 00000088 740C                            jz     .10E ; ax == bx (正常に読み出せた)
    35                                  .10T:
    36 0000008A 68[A600]E8340083C4-             cdecl   puts, .e0
    36 00000092 02                 
    37 00000093 E84D00                          call    reboot
    38                                  .10E:
    39 00000096 E92802                          jmp     stage_2
    40                                  
    41 00000099 426F6F74696E672E2E-     .s0     db      "Booting...", 0x0A, 0x0D, 0x00
    41 000000A2 2E0A0D00           
    42 000000A6 4572726F723A207365-     .e0     db      "Error: sector read", 0x0A, 0x0D, 0x00
    42 000000AF 63746F722072656164-
    42 000000B8 0A0D00             
    43                                  
    44 000000BB 00                      ALIGN   2, db 0
    45                                  ; http://www7a.biglobe.ne.jp/~iell/nasm/nasmdoc_2.03j/nasmdoc4.html#section-4.8.9
    46                                  BOOT:
    47                                          istruc  drive
    48 000000BC 0000                                    at drive.no, dw      0
    49 000000BE 0000                                    at drive.cyln, dw      0
    50 000000C0 0000                                    at drive.head, dw       0
    51 000000C2 0200                                    at drive.sect, dw       2
    52                                          iend
    53                                          
    54                                  
    55                                  %include        "../modules/real/puts.s"
    56                              <1> puts:
    57 000000C4 55                  <1>         push    bp
    58 000000C5 89E5                <1>         mov     bp, sp
    59                              <1> 
    60 000000C7 50                  <1>         push    ax
    61 000000C8 53                  <1>         push    bx
    62 000000C9 56                  <1>         push    si
    63                              <1> 
    64 000000CA 8B7604              <1>         mov     si, [bp + 4] ; 引数(文字列のアドレス)を取得
    65                              <1> 
    66 000000CD B40E                <1>         mov     ah, 0x0E
    67 000000CF BB0000              <1>         mov     bx, 0x0000
    68 000000D2 FC                  <1>         cld ; DFレジスタの値を0にする => ストリング命令が実行されたときにアドレスを加算していく(DFが1なら減算)
    69                              <1> 
    70                              <1> .10L:
    71 000000D3 AC                  <1>         lodsb
    72 000000D4 3C00                <1>         cmp     al, 0
    73 000000D6 7404                <1>         je      .10E
    74                              <1> 
    75 000000D8 CD10                <1>         int     0x10
    76 000000DA EBF7                <1>         jmp     .10L
    77                              <1> 
    78                              <1> .10E:
    79 000000DC 5E                  <1>         pop     si
    80 000000DD 5B                  <1>         pop     bx
    81 000000DE 58                  <1>         pop     ax
    82                              <1> 
    83 000000DF 89EC                <1>         mov     sp, bp
    84 000000E1 5D                  <1>         pop     bp
    85                              <1> 
    86 000000E2 C3                  <1>         ret
    56                                  %include        "../modules/real/reboot.s"
    57                              <1> reboot:
    58 000000E3 68[FF00]E8DBFF83C4- <1>         cdecl   puts, .s0
    58 000000EB 02                  <1>
    59                              <1> 
    60                              <1> .10L:
    61 000000EC B410                <1>         mov     ah, 0x10
    62 000000EE CD16                <1>         int     0x16 ; キー入力待ち
    63                              <1> 
    64 000000F0 3C20                <1>         cmp     al, ' '
    65 000000F2 75F8                <1>         jne     .10L ; スペースキーが押されるまで待つ
    66                              <1> 
    67 000000F4 68[1E01]E8CAFF83C4- <1>         cdecl   puts, .s1 ; 改行
    67 000000FC 02                  <1>
    68                              <1> 
    69 000000FD CD19                <1>         int     0x19 ; 再起動
    70                              <1> 
    71                              <1> .s0:
    72 000000FF 0A0D50757368205350- <1>         db  0x0A, 0x0D, "Push SPACE key to reboot ...", 0
    72 00000108 414345206B65792074- <1>
    72 00000111 6F207265626F6F7420- <1>
    72 0000011A 2E2E2E00            <1>
    73                              <1> .s1:
    74 0000011E 0A0D0A0D00          <1>         db  0x0A, 0x0D, 0x0A, 0x0D, 0
    57                                  %include        "../modules/real/read_chs.s"
    58                              <1> read_chs:
    59 00000123 55                  <1>         push    bp
    60 00000124 89E5                <1>         mov     bp, sp
    61 00000126 6A03                <1>         push    3 ; リトライ回数
    62 00000128 6A00                <1>         push    0 ; 読み出しセクタ数
    63                              <1> 
    64 0000012A 53                  <1>         push    bx
    65 0000012B 51                  <1>         push    cx
    66 0000012C 52                  <1>         push    dx
    67 0000012D 06                  <1>         push    es
    68 0000012E 56                  <1>         push    si
    69                              <1> 
    70 0000012F 8B7604              <1>         mov     si, [bp + 4] ; drive構造体のアドレス
    71                              <1> 
    72                              <1>         ; cxレジスタの設定
    73 00000132 8A6C02              <1>         mov     ch, [si + drive.cyln + 0]
    74 00000135 8A4C03              <1>         mov     cl, [si + drive.cyln + 1]
    75 00000138 C0E106              <1>         shl     cl, 6
    76 0000013B 0A4C06              <1>         or      cl, [si + drive.sect]
    77                              <1> 
    78                              <1>         ; セクタ読み込み
    79 0000013E 8A7404              <1>         mov     dh, [si + drive.head]
    80 00000141 8A14                <1>         mov     dl, [si + 0]
    81 00000143 B80000              <1>         mov     ax, 0x0000
    82 00000146 8EC0                <1>         mov     es, ax ; es = セグメント (0x0000)
    83 00000148 8B5E08              <1>         mov     bx, [bp + 8] ; コピー先
    84                              <1> .10L:
    85 0000014B B402                <1>         mov     ah, 0x02
    86 0000014D 8A4606              <1>         mov     al, [bp + 6] ; セクタ数
    87                              <1> 
    88 00000150 CD13                <1>         int     0x13
    89 00000152 7304                <1>         jnc     .11E
    90                              <1> 
    91 00000154 B000                <1>         mov     al, 0
    92 00000156 EB0C                <1>         jmp     .10E
    93                              <1> .11E:
    94 00000158 3C00                <1>         cmp     al, 0
    95 0000015A 7508                <1>         jne     .10E
    96                              <1> 
    97 0000015C B80000              <1>         mov     ax, 0 ; 戻り値の設定
    98 0000015F FF4EFE              <1>         dec     word [bp - 2] ; リトライ回数をデクリメント
    99 00000162 75E7                <1>         jnz     .10L
   100                              <1> .10E:
   101 00000164 B400                <1>         mov     ah, 0 ; ステータス情報(BIOSコールの戻り値)は破棄
   102                              <1> 
   103 00000166 5E                  <1>         pop     si
   104 00000167 07                  <1>         pop     es
   105 00000168 5A                  <1>         pop     dx
   106 00000169 59                  <1>         pop     cx
   107 0000016A 5B                  <1>         pop     bx
   108                              <1> 
   109 0000016B 89EC                <1>         mov     sp, bp
   110 0000016D 5D                  <1>         pop     bp
   111                              <1> 
   112 0000016E C3                  <1>         ret
    58                                  
    59 0000016F 00<rep 8Fh>                     times   510 - ($ - $$) db 0x00
    60 000001FE 55AA                            db      0x55, 0xAA
    61                                  
    62                                  ; モジュール(先頭512バイト以降に配置)
    63                                  %include        "../modules/real/itoa.s"
    64                              <1> itoa:
    65 00000200 55                  <1>         push    bp
    66 00000201 89E5                <1>         mov     bp, sp
    67                              <1> 
    68 00000203 50                  <1>         push    ax
    69 00000204 53                  <1>         push    bx
    70 00000205 51                  <1>         push    cx
    71 00000206 52                  <1>         push    dx
    72 00000207 56                  <1>         push    si
    73 00000208 57                  <1>         push    di
    74                              <1> 
    75 00000209 8B4604              <1>         mov     ax, [bp + 4] ; 数値
    76 0000020C 8B7606              <1>         mov     si, [bp + 6] ; バッファアドレス
    77 0000020F 8B4E08              <1>         mov     cx, [bp + 8] ; 残りバッファサイズ
    78                              <1>         
    79 00000212 89F7                <1>         mov     di, si ; // バッファの最後尾
    80 00000214 01CF                <1>         add     di, cx ; dst = &dst[size - 1]
    81 00000216 4F                  <1>         dec     di
    82                              <1> 
    83 00000217 8B5E0C              <1>         mov     bx, word [bp + 12] ; オプション(flags)
    84                              <1>         
    85                              <1>         ; 符号付き判定
    86 0000021A F7C30100            <1>         test    bx, 0b0001
    87                              <1> .10Q:   
    88 0000021E 7408                <1>         je      .10E
    89 00000220 83F800              <1>         cmp     ax, 0
    90                              <1> .12Q:   
    91 00000223 7D03                <1>         jge     .12E
    92 00000225 83CB02              <1>         or      bx, 0b0010
    93                              <1> .12E:
    94                              <1> .10E:
    95                              <1> 
    96                              <1>         ; 符号出力判定
    97 00000228 F7C30200            <1>         test    bx, 0b0010
    98                              <1> .20Q:   
    99 0000022C 7410                <1>         je      .20E
   100 0000022E 83F800              <1>         cmp     ax, 0
   101                              <1> .22Q:   
   102 00000231 7D07                <1>         jge     .22F
   103 00000233 F7D8                <1>         neg     ax
   104 00000235 C6042D              <1>         mov     [si], byte '-'
   105 00000238 EB03                <1>         jmp     .22E
   106                              <1> .22F:   
   107 0000023A C6042B              <1>         mov     [si], byte '+'
   108                              <1> .22E:   
   109 0000023D 49                  <1>         dec     cx
   110                              <1> .20E:
   111                              <1> 
   112                              <1>         ; ASCII変換
   113 0000023E 8B5E0A              <1>         mov     bx, [bp + 10] ; 基数
   114                              <1> .30L:
   115 00000241 BA0000              <1>         mov     dx, 0
   116 00000244 F7F3                <1>         div     bx
   117                              <1> 
   118 00000246 89D6                <1>         mov     si, dx
   119 00000248 8A94[7002]          <1>         mov     dl, byte [.ascii + si]
   120                              <1> 
   121 0000024C 8815                <1>         mov     [di], dl
   122 0000024E 4F                  <1>         dec     di
   123                              <1> 
   124 0000024F 83F800              <1>         cmp     ax, 0
   125 00000252 E0ED                <1>         loopnz  .30L
   126                              <1> .30E:
   127                              <1> 
   128                              <1>         ; 空欄を埋める
   129 00000254 83F900              <1>         cmp     cx, 0
   130                              <1> .40Q:
   131 00000257 740D                <1>         je      .40E
   132 00000259 B020                <1>         mov     al, ' '
   133 0000025B 837E0C04            <1>         cmp     [bp + 12], word 0b0100
   134                              <1> .42Q:
   135 0000025F 7502                <1>         jne     .42E
   136 00000261 B030                <1>         mov     al, '0'
   137                              <1> .42E:   
   138 00000263 FD                  <1>         std
   139 00000264 F3AA                <1>         rep stosb
   140                              <1> .40E:
   141                              <1> 
   142                              <1>         ; レジスタの復帰
   143 00000266 5F                  <1>         pop     di
   144 00000267 5E                  <1>         pop     si
   145 00000268 5A                  <1>         pop     dx
   146 00000269 59                  <1>         pop     cx
   147 0000026A 5B                  <1>         pop     bx
   148 0000026B 58                  <1>         pop     ax
   149                              <1> 
   150 0000026C 89EC                <1>         mov     sp, bp
   151 0000026E 5D                  <1>         pop     bp
   152                              <1> 
   153 0000026F C3                  <1>         ret
   154                              <1> 
   155                              <1> .ascii:
   156 00000270 303132333435363738- <1>          db     "0123456789ABCDEF"
   156 00000279 39414243444546      <1>
    64                                  %include        "../modules/real/get_drive_param.s"
    65                              <1> get_drive_param:
    66 00000280 55                  <1>         push    bp
    67 00000281 89E5                <1>         mov     bp, sp
    68                              <1> 
    69 00000283 53                  <1>         push    bx
    70 00000284 51                  <1>         push    cx
    71 00000285 06                  <1>         push    es
    72 00000286 56                  <1>         push    si
    73 00000287 57                  <1>         push    di
    74                              <1> 
    75 00000288 8B7604              <1>         mov     si, [bp + 4]
    76                              <1> 
    77 0000028B B80000              <1>         mov     ax, 0
    78 0000028E 8EC0                <1>         mov     es, ax
    79 00000290 89C7                <1>         mov     di, ax
    80                              <1> 
    81 00000292 B408                <1>         mov     ah, 0x08
    82 00000294 8A14                <1>         mov     dl, [si + drive.no]
    83 00000296 CD13                <1>         int     0x13
    84                              <1> .10Q:
    85 00000298 721B                <1>         jc      .10F
    86                              <1> .10T:
    87 0000029A 88C8                <1>         mov     al, cl
    88 0000029C 83E03F              <1>         and     ax, 0x3F ; セクタ(下位6bitのみ抽出)
    89                              <1> 
    90 0000029F C0E906              <1>         shr     cl, 6 ; シリンダ
    91 000002A2 C1C908              <1>         ror     cx, 8
    92 000002A5 41                  <1>         inc     cx
    93                              <1> 
    94 000002A6 0FB6DE              <1>         movzx   bx, dh ; ヘッド
    95 000002A9 43                  <1>         inc     bx
    96                              <1> 
    97 000002AA 894C02              <1>         mov     [si + drive.cyln], cx
    98 000002AD 895C04              <1>         mov     [si + drive.head], bx
    99 000002B0 894406              <1>         mov     [si + drive.sect], ax
   100                              <1> 
   101 000002B3 EB03                <1>         jmp .10E
   102                              <1> .10F:
   103 000002B5 B80000              <1>         mov     ax, 0
   104                              <1> .10E:
   105 000002B8 5F                  <1>         pop     di
   106 000002B9 5E                  <1>         pop     si
   107 000002BA 07                  <1>         pop     es
   108 000002BB 59                  <1>         pop     cx
   109 000002BC 5B                  <1>         pop     bx
   110                              <1> 
   111 000002BD 89EC                <1>         mov     sp, bp
   112 000002BF 5D                  <1>         pop     bp
   113                              <1> 
   114 000002C0 C3                  <1>         ret
    65                                  
    66                                  ; ブート処理の第二ステージ
    67                                  stage_2:
    68 000002C1 68[3B03]E8FDFD83C4-             cdecl   puts, .s0
    68 000002C9 02                 
    69                                  
    70                                          ; ドライブ情報を取得
    71 000002CA 68[BC00]E8B0FF83C4-             cdecl   get_drive_param, BOOT
    71 000002D2 02                 
    72 000002D3 83F800                          cmp     ax, 0
    73                                  .10Q:
    74 000002D6 750C                            jne     .10E
    75                                  .10T:
    76 000002D8 68[7203]E8E6FD83C4-             cdecl   puts, .e0
    76 000002E0 02                 
    77 000002E1 E8FFFD                          call    reboot
    78                                  .10E:
    79                                          ; ドライブ情報を表示
    80 000002E4 A1[BC00]                        mov     ax, [BOOT + drive.no]
    81 000002E7 6A046A106A0268-                 cdecl   itoa, ax, .p1, 2, 16, 0b0100
    81 000002EE [5303]50E80CFF83C4-
    81 000002F6 0A                 
    82 000002F7 A1[BE00]                        mov     ax, [BOOT + drive.cyln]
    83 000002FA 6A046A106A0468-                 cdecl   itoa, ax, .p2, 4, 16, 0b0100
    83 00000301 [5B03]50E8F9FE83C4-
    83 00000309 0A                 
    84 0000030A A1[C000]                        mov     ax, [BOOT + drive.head]
    85 0000030D 6A046A106A0268-                 cdecl   itoa, ax, .p3, 2, 16, 0b0100
    85 00000314 [6503]50E8E6FE83C4-
    85 0000031C 0A                 
    86 0000031D A1[C200]                        mov     ax, [BOOT + drive.sect]
    87 00000320 6A046A106A0268-                 cdecl   itoa, ax, .p4, 2, 16, 0b0100
    87 00000327 [6D03]50E8D3FE83C4-
    87 0000032F 0A                 
    88 00000330 68[4A03]E88EFD83C4-             cdecl   puts, .s1
    88 00000338 02                 
    89                                  
    90 00000339 EBFE                            jmp     $
    91                                  
    92 0000033B 326E64207374616765-     .s0     db      "2nd stage...", 0x0A, 0x0D, 0x00
    92 00000344 2E2E2E0A0D00       
    93                                  
    94 0000034A 2044726976653A3078      .s1     db      " Drive:0x"
    95 00000353 20202C20433A3078        .p1     db      "  , C:0x"
    96 0000035B 202020202C20483A30-     .p2     db      "    , H:0x"
    96 00000364 78                 
    97 00000365 20202C20533A3078        .p3     db      "  , S:0x"
    98 0000036D 20200A0D00              .p4     db      "  ", 0x0A, 0x0D, 0
    99                                  
   100 00000372 43616E277420676574-     .e0     db      "Can't get drive parameter.", 0
   100 0000037B 206472697665207061-
   100 00000384 72616D657465722E00 
   101                                  
   102 0000038D 00<rep 1C73h>                   times   BOOT_SIZE - ($ - $$)   db 0x00 ; 8K byte
